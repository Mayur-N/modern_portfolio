//Menu button
.menu-btn {
  position: absolute;
  z-index: 3;
  right: 35px;
  top: 35px;
  cursor: pointer;
  @include easeOut;

  .btn-line {
    width: 28px;
    height: 3px;
    margin: 0 0 5px 0;
    background: #fff;
    @include easeOut;
  }

  //Rotate into X with menu lines
  &.close {
    transform: rotate(180deg);

    // transform hamburger into X
    .btn-line {
      //line 1 - rotate
      &:nth-child(1) {
        // rotate first hamburger menu line by 45 deg (like this /) and then reposition it using translate x = 5 px, y = 5px
        transform: rotate(45deg) translate(5px, 5px);
      }

      //line 2 - hide
      &:nth-child(2) {
        opacity: 0;
      }
      //line 3 - rotate
      &:nth-child(3) {
        transform: rotate(-45deg) translate(7px, -6px);
      }
    }
  }
}

.menu {
  position: fixed;
  top: 0;
  width: 100%;
  opacity: 0.9;
  visibility: hidden;

  &.show {
    visibility: visible;
  }

  //    .menu-branding,menu-nav
  &-branding,
  &-nav {
    display: flex;
    flex-flow: column wrap;
    align-items: center;
    justify-content: center;
    float: left;
    width: 50%;
    height: 100vh;
    overflow: hidden;
  }

  &-nav {
    margin: 0;
    padding: 0;
    background: darken($primary-color, 5);
    list-style: none;
    transform: translate3d(
      0,
      -100%,
      0
    ); // this will push the nav list on the top
    @include easeOut;

    &.show {
      // when show class is attached by javascript, below property will bring down the nav list to middle Or we can save it will undo the translate done earlier and nav list will come done to its default position
      transform: translate3d(0, 0, 0);
    }
  }

  //   Branding side
  &-branding {
    background: $primary-color;
    transform: translate3d(0, 100%, 0); // this will push the nav list on bottom
    @include easeOut;

    &.show {
      //slide in from bottom
      transform: translate3d(0, 0, 0);
    }
    .portrait {
      width: 250px;
      height: 250px;
      background: url("../img/portrait.jpg");
      border-radius: 50%;
      border: solid 3px $secondary-color;
    }
  }

  .nav-item {
    transform: translate3d(600px, 0, 0); //move right 600px
    @include easeOut;

    &.show {
      // slide in from right
      transform: translate3d(0, 0, 0); //move right 600px
    }
  }
}

// Delay each nav item slide by 0.1s
@for $x from 1 through 4 {
  // we cannot use variable #x directly in nth child here so we have to use #{variable} format
  .nav-item:nth-child(#{$x}) {
    transition-delay: $x * 0.1s;
  }
}
